{"version":3,"sources":["Components/SearchResult.js","pages/HomePage.js","Components/Recipe.js","pages/CraftingPage.js","Components/GatheringMap.js","Components/GatheringPoints.js","pages/GatheringPage.js","Components/FishingMap.js","Components/FishingSpots.js","pages/FishingPage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchResult","handleClick","props","state","result","this","setState","className","selectedObj","ID","onClick","Component","HomePage","handleSearch","e","preventDefault","performSearch","handleChange","updateSearchTerm","target","value","updateSelectedObj","listItems","searchResults","filter","x","map","id","Fragment","filterBy","listRecipes","onSubmit","type","placeholder","searchString","onChange","length","Recipe","recipe","getRecipe","bind","recipeID","url","fetch","mode","then","response","json","objName","innerText","ingredients","i","push","item","hasOwnProperty","includes","Name","lookupItem","ingredientAmounts","ingredientRecipes","ingredient","index","CraftingPage","itemToBeCrafted","obj","align","src","ItemResult","Icon","alt","GatheringMap","multiplier","window","innerWidth","selectedRegion","nodes","TerritoryType","Map","PlaceName","node","key","GatheringPointBase","GatheringType","IconMain","style","position","width","height","top","mapData","PixelY","left","PixelX","GatheringPoints","gatheringPoints","gatheringPointData","results","items","Results","returnItems","j","Item","gatheringItemID","territories","PlaceNameRegion","regions","territory","toggleTerritories","selectedTerritory","region","toggleRegions","MapFilename","GatheringPage","text","FishingMap","fishingSpots","spot","Z","X","FishingSpots","FishingPage","fishingSpotIDs","GameContentLinks","FishingSpot","fishingSpotData","NavBar","App","isLoading","gatheringItemResults","craftingItemResults","fishingItemResults","lastIndex","lookupRecipe","headers","searchTerm","replace","itemId","GatheringItem","selectedObjResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a64ad5d1.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass SearchResult extends Component {\n    constructor(){\n        super();\n        this.state = {\n            result: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            result: this.props.result\n        });\n    }\n\n    handleClick = () => {\n        this.props.handleClick(this.state.result);\n    }\n\n    render() {\n        return (\n            <>\n                <tr className={this.props.selectedObj.ID === this.state.result.ID ? 'row selected' : 'row'}>\n                    <td \n                        \n                        onClick={this.handleClick}\n                    >\n                        {this.state.result['Name']}\n                    </td>\n                </tr>\n            </>\n        );\n    }\n}\n\nexport default SearchResult;","import React, {Component} from 'react';\nimport SearchResult from '../Components/SearchResult';\n\nclass HomePage extends Component {\n    handleSearch = (e) => {\n        e.preventDefault();\n        this.props.performSearch();\n    }\n\n    handleChange = (e) => {\n        this.props.updateSearchTerm(e.target.value);\n    }\n\n    handleClick = (e) => {\n        this.props.updateSelectedObj(e);\n    }\n\n    render() {\n        let listItems = this.props.searchResults.filter(x => x['UrlType'] === \"Item\");\n        listItems = listItems.map((result, id) => \n            <React.Fragment key={id}>\n                <SearchResult \n                    result={result} \n                    filterBy={\"item\"}\n                    handleClick={this.handleClick}\n                    selectedObj={this.props.selectedObj}\n                />\n            </React.Fragment>\n        );\n\n        let listRecipes = this.props.searchResults.filter(x => x['UrlType'] === \"Recipe\");\n        listRecipes = listRecipes.map((result, id) => \n            <React.Fragment key={id}>\n                <SearchResult \n                    result={result} \n                    filterBy={\"recipe\"}\n                    handleClick={this.handleClick}\n                    selectedObj={this.props.selectedObj}\n                />\n            </React.Fragment>\n        );\n\n        return (\n            <>\n            <form id=\"searchForm\" onSubmit={this.handleSearch}>\n                <p>Search for an item to get started:</p>\n                <input \n                    type=\"text\"\n                    placeholder=\"Type here to search...\"\n                    value={this.props.searchString}\n                    onChange={this.handleChange}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"\"\n                >\n                    Search\n                </button>\n            </form>\n            <p className={listItems.length === 0 ? 'invisible' : ''}></p>\n            <table className={listItems.length === 0 ? 'invisible' : 'table'}>\n                <thead>\n                <tr className=\"row header\">\n                    <th>Items</th>\n                </tr>\n                </thead>\n                <tbody>{listItems}</tbody>\n            </table>\n            <p className={listRecipes.length === 0 ? 'invisible' : ''}></p>\n            <table className={listRecipes.length === 0 ? 'invisible' : 'table'}>\n                <thead>\n                <tr className=\"row header\">\n                    <th>Recipes</th>\n                </tr>\n                </thead>\n                <tbody>{listRecipes}</tbody>\n            </table>\n            </>\n        );\n    }\n}\n\nexport default HomePage;","import React, {Component} from 'react';\n\nclass Recipe extends Component {\n    constructor() {\n        super();\n        this.state = {\n            recipe: []\n        };\n        this.getRecipe = this.getRecipe.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRecipe(this.props.recipeID);\n    }\n\n    getRecipe(id) {\n        const url = `https://xivapi.com/recipe/${id}?columns=ID,Icon,RecipeLevelTable,AmountIngredient0,AmountIngredient1,AmountIngredient2,AmountIngredient3,AmountIngredient4,AmountIngredient5,AmountIngredient6,AmountIngredient7,AmountIngredient8,AmountIngredient9,AmountResult,ClassJob.Abbreviation,ClassJob.Icon,ItemIngredient0,ItemIngredient1,ItemIngredient2,ItemIngredient3,ItemIngredient4,ItemIngredient5,ItemIngredient6,ItemIngredient7,ItemIngredient8,ItemIngredient9,ItemIngredientRecipe0,ItemIngredientRecipe1,ItemIngredientRecipe2,ItemIngredientRecipe3,ItemIngredientRecipe4,ItemIngredientRecipe5,ItemIngredientRecipe6,ItemIngredientRecipe7,ItemIngredientRecipe8,ItemIngredientRecipe9,ItemResult`\n\n        fetch(url, {mode: 'cors'})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    recipe: result\n            });\n        });\n    }\n\n    handleClick(e) {\n        const target = e.target;\n        const objName = target.innerText;\n        const ingredients = [];\n\n        for(let i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n            ingredients.push(this.state.recipe[`ItemIngredient${i}`]);\n        }\n\n        ingredients.map(item => {\n            if(item !== null && item.hasOwnProperty('Name')) {\n                if(objName.includes(item.Name)) {\n                    this.props.lookupItem(item)\n                }\n            } \n            return item;\n        })\n    }\n\n    render() {\n        if(this.state.recipe.length === 0) {\n            return <div className= \"invisible\" />\n        }\n\n        const ingredientAmounts = [];\n        const ingredients = [];\n        const ingredientRecipes = [];\n\n        for(let i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n            ingredientAmounts.push(this.state.recipe[`AmountIngredient${i}`]);\n            ingredients.push(this.state.recipe[`ItemIngredient${i}`]);\n            ingredientRecipes.push(this.state.recipe[`ItemIngredientRecipe${i}`]);\n        }\n\n        return (\n            <>\n                <ul className=\"cool-list\">\n                    {ingredientAmounts.map((ingredient, index) => {\n                        if(ingredient > 0) {\n                            if(ingredientRecipes[index]) {\n                                return (\n                                    <React.Fragment key={index}>\n                                        <li id=\"parent-material\">{ingredients[index].Name} (x{ingredient})</li>\n                                        <Recipe \n                                            recipeID={ingredientRecipes[index][0].ID}\n                                            lookupItem={this.props.lookupItem}\n                                        />\n                                    </React.Fragment>\n                                )\n                            } else {\n                                return (\n                                    <li \n                                        id=\"base-material\" \n                                        key={index}\n                                        onClick={this.handleClick}\n                                    >\n                                        {ingredients[index].Name} (x{ingredient})\n                                    </li>\n                                )\n                            }\n                        } else {\n                            return <div className=\"invisible\" />\n                        }\n                    })}\n                </ul>\n            </>\n        )\n    }\n}\n\nexport default Recipe;","import React, {Component} from 'react';\nimport Recipe from '../Components/Recipe';\n\nclass CraftingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            itemToBeCrafted: [],\n            ingredientAmounts: [],\n            ingredients: []\n        };\n    }\n\n    render() {\n        if(this.props.obj.hasOwnProperty('AmountIngredient0')) {\n            return (\n                <>\n                    <div>\n                        <img align=\"right\" src={`https://xivapi.com${this.props.obj.ItemResult.Icon}`} alt=\"Recipe item\"/>\n                        <h2>{this.props.obj.ItemResult.Name}</h2>\n                    </div>\n                    <Recipe \n                        recipeID={this.props.obj.ID}\n                        lookupItem={this.props.lookupItem}\n                    />\n                </>\n            )\n        } else {\n            return <div className=\"invisible\" />\n        }\n    }\n}\n\nexport default CraftingPage;","import React, {Component} from 'react';\n\nclass GatheringMap extends Component {\n    render() {\n        const multiplier = window.innerWidth > 420 ? 1 : 0.75;\n\n        return (\n            <div\n                className={this.props.selectedRegion.includes(this.props.nodes[0].TerritoryType.Map.PlaceName.Name) ? '' : 'invisible'} \n                id=\"map-container\">\n                <img\n                    id=\"map\"\n                    src={this.props.url}\n                    alt=\"Map\"\n                />\n                {this.props.nodes.map((node, key) => {\n                    return (\n                        <img\n                            src={`https://xivapi.com${node.GatheringPointBase.GatheringType.IconMain}`}\n                            alt=\"i\"\n                            style= {{\n                                position: 'absolute',\n                                width: 32 * multiplier,\n                                height: 32 * multiplier,\n                                top: (this.props.mapData.filter(x => x.ID === node.ID)[0].PixelY / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier),\n                                left: (this.props.mapData.filter(x => x.ID === node.ID)[0].PixelX / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier)\n                            }}\n                            key={key}\n                        />\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default GatheringMap;","import React, {Component} from 'react';\nimport {FaAngleRight, FaAngleDown} from 'react-icons/fa';\nimport GatheringMap from '../Components/GatheringMap';\n\nclass GatheringPoints extends Component {\n    constructor() {\n        super();\n        this.state = {\n            gatheringPoints: [],\n            gatheringPointData: []\n        };\n    }\n\n    componentDidMount() {\n        //this.getData();\n    }\n\n    getData() {\n        const url = 'https://xivapi.com/GatheringPoint?limit=-1&columns=ID,GatheringPointBase.ID,GatheringPointBase.GatheringLevel,GatheringPointBase.GatheringType.ID,GatheringPointBase.GatheringType.Name,GatheringPointBase.GatheringType.IconMain,TerritoryType.Map.ID,TerritoryType.Map.PlaceNameRegion.Name,TerritoryType.Map.PlaceName.Name,GatheringPointBase.Item0.Item.ID,GatheringPointBase.Item1.Item.ID,GatheringPointBase.Item2.Item.ID,GatheringPointBase.Item3.Item.ID,GatheringPointBase.Item4.Item.ID,GatheringPointBase.Item5.Item.ID,GatheringPointBase.Item6.Item.ID,GatheringPointBase.Item7.Item.ID,PlaceName.Name,TerritoryType.Map.MapFilename';\n        \n        fetch(url, {mode: 'cors'})\n            .then(response => response.json())\n            .then(results => {\n                const items = results.Results.map(item => {\n                    return item;\n                });\n\n                this.setState({\n                    gatheringPoints: items\n                });\n            });\n    }\n\n    render() {\n        const returnItems = [];\n        for (let i = 0; i < this.props.gatheringPointData.length; i++) {\n            for (let j in [0, 1, 2, 3, 4, 5, 6, 7]) {\n                if (this.props.gatheringPointData[i].GatheringPointBase[`Item${j}`].Item.ID === this.props.gatheringItemID) {\n                    returnItems.push(this.props.gatheringPointData[i]);\n                }\n            }\n        }\n\n        const territories = [];\n        for(let i = 0; i < returnItems.length; i++) {\n            if(!territories.includes(returnItems[i].TerritoryType.Map.PlaceNameRegion.Name)) {                \n                territories.push(returnItems[i].TerritoryType.Map.PlaceNameRegion.Name);\n            }\n        }\n\n        const regions = [];\n        for(let i = 0; i < returnItems.length; i++) {\n            if(!regions.includes(returnItems[i].TerritoryType.Map.PlaceName.Name)) {\n                regions.push(returnItems[i].TerritoryType.Map.PlaceName.Name);\n            }\n        }\n        \n        return (\n            <>\n            {territories.map((territory, key) => {\n                if(territory !== null) {\n                    return (\n                        <React.Fragment key={key}>\n                            <h2 onClick={this.props.toggleTerritories}>{this.props.selectedTerritory.includes(territory) ? <FaAngleDown /> : <FaAngleRight />} {territory} ({returnItems.filter(x => x.TerritoryType.Map.PlaceNameRegion.Name === territory).length} nodes)</h2>\n                            {regions.map((region, key) => {\n                                if(returnItems.filter(x => x.TerritoryType.Map.PlaceNameRegion.Name === territory && x.TerritoryType.Map.PlaceName.Name === region).length > 0) {\n                                    return (\n                                        <div key={key} className={this.props.selectedTerritory.includes(territory) ? '' : 'invisible'}>\n                                        <h3 onClick={this.props.toggleRegions}>{this.props.selectedRegion.includes(region) ? <FaAngleDown /> : <FaAngleRight />} {region}</h3>\n                                            <GatheringMap\n                                                url={`https://xivapi.com${returnItems.filter(x => x.TerritoryType.Map.PlaceName.Name === region)[0].TerritoryType.Map.MapFilename}`}\n                                                nodes={returnItems.filter(x => x.TerritoryType.Map.PlaceName.Name === region)}\n                                                mapData={this.props.mapData}\n                                                selectedRegion={this.props.selectedRegion}\n                                            />\n                                        </div>\n                                    )\n                                } else {\n                                    return <div className='invisible' key={key}/>\n                                }\n                            })}                                                \n                        </React.Fragment>\n                    );\n                } else {\n                    return (\n                        <div key={key}/>\n                    );\n                }\n            })}\n            </>\n        );    \n    }\n}\n\nexport default GatheringPoints;","import React, {Component} from 'react';\nimport GatheringPoints from '../Components/GatheringPoints';\n\nclass GatheringPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedTerritory: '',\n            selectedRegion: ''\n        };\n        this.toggleTerritories = this.toggleTerritories.bind(this);\n        this.toggleRegions = this.toggleRegions.bind(this);\n    }\n\n    toggleTerritories(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            this.setState({\n                selectedRegion: ''\n            });\n    \n            if(this.state.selectedTerritory === text) {\n                this.setState({\n                    selectedTerritory: ''\n                });\n            } else {\n                this.setState({\n                    selectedTerritory: text\n                });\n            }\n        }        \n    }\n\n    toggleRegions(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            if(this.state.selectedRegion === text) {\n                this.setState({\n                    selectedRegion: ''\n                });\n            } else {\n                this.setState({\n                    selectedRegion: text\n                });\n            }\n        }\n    }\n\n    render () {\n        if(this.props.obj.length > 1) {\n            const url = 'https://xivapi.com' + this.props.obj[3];\n\n            return (\n                <>\n                    <div>\n                        <img align=\"right\" src={url} alt=\"Gathering item\"/>\n                        <h2>{this.props.obj[0]}</h2>\n                    </div>\n                    <GatheringPoints \n                        gatheringItemID={this.props.obj[1]}\n                        toggleTerritories={this.toggleTerritories}\n                        toggleRegions={this.toggleRegions}\n                        selectedTerritory={this.state.selectedTerritory}\n                        selectedRegion={this.state.selectedRegion}\n                        mapData={this.props.mapData}\n                        gatheringPointData={this.props.gatheringPointData}\n                    />\n                </>\n            );\n        } else if (this.props.obj.length === 1) {\n            return (\n                <h3>{this.props.obj[0]}!</h3>\n            );\n        } else {\n            return (\n                <div />\n            );\n        }        \n    }\n}\n\nexport default GatheringPage;","import React, {Component} from 'react';\n\nclass FishingMap extends Component {\n    render() {\n        const multiplier = window.innerWidth > 420 ? 1 : 0.75;\n\n        return (\n            <div\n                className={this.props.selectedRegion.includes(this.props.fishingSpots[0].TerritoryType.PlaceName.Name) ? '' : 'invisible'} \n                id=\"map-container\">\n                <img\n                    id=\"map\"\n                    src={this.props.url}\n                    alt=\"Map\"\n                />\n                {this.props.fishingSpots.map((spot, key) => {\n                    return (\n                        <img\n                            src='https://xivapi.com//cj/1/fisher.png'\n                            alt=\"i\"\n                            style= {{\n                                position: 'absolute',\n                                width: 32 * multiplier,\n                                height: 32 * multiplier,\n                                top: (spot.Z / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier),\n                                left: (spot.X / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier)\n                            }}\n                            key={key}\n                        />\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default FishingMap;","import React, {Component} from 'react';\nimport {FaAngleRight, FaAngleDown} from 'react-icons/fa';\nimport FishingMap from './FishingMap';\n\nclass FishingSpots extends Component {\n    constructor() {\n        super();\n        this.state ={\n\n        };\n    }\n\n    render() {\n        const territories = [];\n        const regions = [];\n\n        for(let i = 0; i < this.props.fishingSpots.length; i++) {\n            if(!territories.includes(this.props.fishingSpots[i].TerritoryType.PlaceNameRegion.Name)) {                \n                territories.push(this.props.fishingSpots[i].TerritoryType.PlaceNameRegion.Name);\n            }\n\n            if(!regions.includes(this.props.fishingSpots[i].TerritoryType.PlaceName.Name)) {\n                regions.push(this.props.fishingSpots[i].TerritoryType.PlaceName.Name);\n            }\n        }\n\n        return(\n            <>\n                {territories.map((territory, key) => {\n                if(territory !== null) {\n                    return (\n                        <React.Fragment key={key}>\n                            <h2 onClick={this.props.toggleTerritories}>{this.props.selectedTerritory.includes(territory) ? <FaAngleDown /> : <FaAngleRight />} {territory} ({this.props.fishingSpots.filter(x => x.TerritoryType.PlaceNameRegion.Name === territory).length} nodes)</h2>\n                            {regions.map((region, key) => {\n                                if(this.props.fishingSpots.filter(x => x.TerritoryType.PlaceNameRegion.Name === territory && x.TerritoryType.PlaceName.Name === region).length > 0) {\n                                    return (\n                                        <div key={key} className={this.props.selectedTerritory.includes(territory) ? '' : 'invisible'}>\n                                        <h3 onClick={this.props.toggleRegions}>{this.props.selectedRegion.includes(region) ? <FaAngleDown /> : <FaAngleRight />} {region}</h3>\n                                            <FishingMap\n                                                url={`https://xivapi.com${this.props.fishingSpots.filter(x => x.TerritoryType.PlaceName.Name === region)[0].TerritoryType.Map.MapFilename}`}\n                                                fishingSpots={this.props.fishingSpots.filter(x => x.TerritoryType.PlaceName.Name === region)}\n                                                selectedRegion={this.props.selectedRegion}\n                                            />\n                                        </div>\n                                    )\n                                } else {\n                                    return <div className='invisible' key={key}/>\n                                }\n                            })}                                                \n                        </React.Fragment>\n                    );\n                } else {\n                    return (\n                        <div key={key}/>\n                    );\n                }\n            })}\n            </>\n        )\n    }\n}\n\nexport default FishingSpots;","import React, {Component} from 'react';\nimport FishingSpots from '../Components/FishingSpots';\n\nclass FishingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedTerritory: '',\n            selectedRegion: ''\n        };\n        this.toggleTerritories = this.toggleTerritories.bind(this);\n        this.toggleRegions = this.toggleRegions.bind(this);\n    }\n\n    toggleTerritories(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            this.setState({\n                selectedRegion: ''\n            });\n    \n            if(this.state.selectedTerritory === text) {\n                this.setState({\n                    selectedTerritory: ''\n                });\n            } else {\n                this.setState({\n                    selectedTerritory: text\n                });\n            }\n        }        \n    }\n\n    toggleRegions(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            if(this.state.selectedRegion === text) {\n                this.setState({\n                    selectedRegion: ''\n                });\n            } else {\n                this.setState({\n                    selectedRegion: text\n                });\n            }\n        }\n    }\n\n    render() {\n        if(this.props.obj.length === 0) {\n            return <div className=\"invisible\" />\n        }\n\n        const fishingSpotIDs = [];\n        const fishingSpots = [];\n\n        for(var i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n            if(this.props.obj.GameContentLinks.FishingSpot.hasOwnProperty(`Item${i}`)) {\n                for(var j = 0; j < this.props.obj.GameContentLinks.FishingSpot[`Item${i}`].length; j++) {\n                    if(!fishingSpotIDs.includes(this.props.obj.GameContentLinks.FishingSpot[`Item${i}`][j])) {\n                        fishingSpotIDs.push(this.props.obj.GameContentLinks.FishingSpot[`Item${i}`][j]);\n                    }\n                }\n            }\n        }\n\n        fishingSpotIDs.map(id => {\n            fishingSpots.push(this.props.fishingSpotData.filter(x => x.ID === id)[0]);\n            return id;\n        });\n\n        return (\n            <>\n            <div>\n                <img align=\"right\" src={`https://xivapi.com${this.props.obj.Icon}`} alt=\"Fish\"/>\n                <h2>{this.props.obj.Name}</h2>\n                <FishingSpots \n                    fishingSpots={fishingSpots}\n                    toggleTerritories={this.toggleTerritories}\n                    toggleRegions={this.toggleRegions}\n                    selectedTerritory={this.state.selectedTerritory}\n                    selectedRegion={this.state.selectedRegion}\n                />\n            </div>                \n            </>\n        )\n    }\n}\n\nexport default FishingPage;","import React from 'react';\n\nconst NavBar = () => (\n    <nav>\n        <h1>CraFFtr</h1>\n    </nav>\n);\n\nexport default NavBar;","import React, {Component} from 'react';\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport CraftingPage from './pages/CraftingPage';\nimport GatheringPage from './pages/GatheringPage';\nimport FishingPage from './pages/FishingPage';\nimport NavBar from './NavBar';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      searchString: '',\n      searchResults: [],\n      selectedObj: [],\n      gatheringItemResults: [],\n      craftingItemResults: [],\n      fishingItemResults: [],\n      lastIndex: 0,\n      mapData: [],\n      fishingSpotData: [],\n      gatheringPointData: []\n    };\n    this.updateSearchTerm = this.updateSearchTerm.bind(this);\n    this.performSearch = this.performSearch.bind(this);\n    this.updateSelectedObj = this.updateSelectedObj.bind(this);\n    this.lookupItem = this.lookupItem.bind(this);\n    this.lookupRecipe = this.lookupRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    const mapData = [];\n\n    fetch('./MappyData.json', \n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then(results => results.map(item => {\n        mapData.push(item);\n        return item;\n    }));\n\n    const fishingSpotData = [];\n    const urlFishing = 'https://xivapi.com/fishingspot?limit=1000&columns=ID,Item0TargetID,Item1TargetID,Item2TargetID,Item3TargetID,Item4TargetID,Item5TargetID,Item6TargetID,Item7TargetID,Item8TargetID,Item9TargetID,PlaceName.Name,TerritoryType.PlaceName.Name,TerritoryType.PlaceNameRegion.Name,TerritoryType.Map.MapFilename,X,Z';\n\n    fetch(urlFishing, {mode: 'cors'})\n      .then(response => response.json())\n      .then(results => results.Results.map(item => {\n        fishingSpotData.push(item);\n        return item;\n      }));\n    \n    const gatheringPointData = [];\n    const urlGathering = 'https://xivapi.com/GatheringPoint?limit=-1&columns=ID,GatheringPointBase.ID,GatheringPointBase.GatheringLevel,GatheringPointBase.GatheringType.ID,GatheringPointBase.GatheringType.Name,GatheringPointBase.GatheringType.IconMain,TerritoryType.Map.ID,TerritoryType.Map.PlaceNameRegion.Name,TerritoryType.Map.PlaceName.Name,GatheringPointBase.Item0.Item.ID,GatheringPointBase.Item1.Item.ID,GatheringPointBase.Item2.Item.ID,GatheringPointBase.Item3.Item.ID,GatheringPointBase.Item4.Item.ID,GatheringPointBase.Item5.Item.ID,GatheringPointBase.Item6.Item.ID,GatheringPointBase.Item7.Item.ID,PlaceName.Name,TerritoryType.Map.MapFilename';\n\n    fetch(urlGathering, {mode: 'cors'})\n      .then(response => response.json())\n      .then(results => results.Results.map(item => {\n          gatheringPointData.push(item);\n          return item;\n      }));\n\n    this.setState({\n      mapData: mapData,\n      fishingSpotData: fishingSpotData,\n      gatheringPointData: gatheringPointData,\n      isLoading: false\n    });\n  }\n\n  updateSearchTerm(searchTerm) {\n    this.setState({searchString: searchTerm});\n  }\n\n  performSearch() {\n    const url = `https://xivapi.com/search?string=${this.state.searchString.replace(' ', '%20')}`\n    \n    this.setState({\n      gatheringItemResults: [],\n      craftingItemResults: [],\n      fishingItemResults: [],\n      searchResults: []\n    });\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        let items = result['Results'].map(item => {\n          item.itemId = this.state.lastIndex;\n          this.setState({lastIndex: this.state.lastIndex + 1});\n          return item;\n        });\n\n        this.setState({\n          searchResults: items\n        });\n      });\n  }\n\n  lookupItem(obj) {\n    const url = `https://xivapi.com/item/${obj.ID}`\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        if(result.GameContentLinks.hasOwnProperty('GatheringItem')){\n          this.setState({\n            gatheringItemResults: [\n              result.Name,\n              result.ID,\n              result.GameContentLinks.GatheringItem.Item[0],\n              result.Icon\n            ]\n          });\n        } else if(result.GameContentLinks.hasOwnProperty('FishingSpot')){\n          this.setState({\n            fishingItemResults: result\n          });\n        } else {\n          this.setState({\n            gatheringItemResults: [`${result.Name} cannot be gathered`],\n            fishingItemResults: [`${result.Name} cannot be fished`]\n          });\n        }\n      });\n  }\n\n  lookupRecipe(obj) {\n    const url = `https://xivapi.com/recipe/${obj.ID}?columns=ID,Icon,RecipeLevelTable,AmountIngredient0,AmountIngredient1,AmountIngredient2,AmountIngredient3,AmountIngredient4,AmountIngredient5,AmountIngredient6,AmountIngredient7,AmountIngredient8,AmountIngredient9,AmountResult,ClassJob.Abbreviation,ClassJob.Icon,ItemIngredient0,ItemIngredient1,ItemIngredient2,ItemIngredient3,ItemIngredient4,ItemIngredient5,ItemIngredient6,ItemIngredient7,ItemIngredient8,ItemIngredient9,ItemIngredientRecipe0,ItemIngredientRecipe1,ItemIngredientRecipe2,ItemIngredientRecipe3,ItemIngredientRecipe4,ItemIngredientRecipe5,ItemIngredientRecipe6,ItemIngredientRecipe7,ItemIngredientRecipe8,ItemIngredientRecipe9,ItemResult`\n\n    this.setState({\n      selectedObjResults: [],\n      craftingItemResults: [],\n      fishingItemResults: []\n    });\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          craftingItemResults: result\n        });\n      });\n  }\n\n  updateSelectedObj(obj) {\n    this.setState({\n      selectedObj: obj,\n      gatheringItemResults: [],\n      craftingItemResults: [],\n      fishingItemResults: []\n    })\n\n    if(obj['UrlType'] === 'Recipe') {\n      this.lookupRecipe(obj);\n    } else {\n      this.lookupItem(obj);\n    }\n  }\n\n  render () {\n    if(this.state.isLoading) {\n      return (\n        <div>\n          <img align='centre' src=\"./Loading.gif\" alt=\"Loading...\" />\n          <h2 align='centre'>Loading...</h2>\n        </div>\n      )\n    } else {\n      return (\n        <>\n          <div className=\"app\">\n            <NavBar />\n            <div id=\"page-body\">\n              <HomePage \n                updateSearchTerm={this.updateSearchTerm}\n                updateSelectedObj={this.updateSelectedObj} \n                performSearch={this.performSearch} \n                searchString={this.state.searchString}\n                searchResults={this.state.searchResults}\n                selectedObj={this.state.selectedObj}\n              />\n              <CraftingPage\n                obj={this.state.craftingItemResults}\n                lookupItem={this.lookupItem}\n              />\n              <GatheringPage\n                obj={this.state.gatheringItemResults}\n                mapData={this.state.mapData}\n                gatheringPointData={this.state.gatheringPointData}\n              />\n              <FishingPage \n                obj={this.state.fishingItemResults}\n                fishingSpotData={this.state.fishingSpotData}\n              />\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}