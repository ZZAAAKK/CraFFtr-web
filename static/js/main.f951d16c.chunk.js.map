{"version":3,"sources":["Components/SearchResult.js","pages/HomePage.js","Components/Recipe.js","pages/CraftingPage.js","Components/GatheringMap.js","Components/GatheringPoints.js","pages/GatheringPage.js","Components/FishingMap.js","Components/FishingSpots.js","pages/FishingPage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchResult","handleClick","props","state","result","this","setState","className","selectedObj","ID","onClick","Component","HomePage","handleSearch","e","preventDefault","performSearch","handleChange","updateSearchTerm","target","value","updateSelectedObj","listRecipes","searchResults","filter","x","listItems","y","Name","length","map","id","Fragment","filterBy","align","onSubmit","type","placeholder","searchString","onChange","Recipe","recipe","getRecipe","bind","recipeID","url","fetch","mode","then","response","json","objName","innerText","ingredients","i","push","item","hasOwnProperty","includes","lookupItem","ingredientAmounts","ingredientRecipes","ingredient","index","CraftingPage","itemToBeCrafted","obj","src","ItemResult","Icon","alt","GatheringMap","multiplier","window","innerWidth","selectedRegion","nodes","TerritoryType","Map","PlaceName","node","key","mapData","GatheringPointBase","GatheringType","IconMain","style","position","width","height","top","PixelY","left","PixelX","GatheringPoints","gatheringPointData","returnItems","territories","regions","j","Item","gatheringItemID","PlaceNameRegion","territory","toggleTerritories","selectedTerritory","region","toggleRegions","MapFilename","GatheringPage","text","error","FishingMap","fishingSpots","spot","Z","X","FishingSpots","FishingPage","fishingSpotIDs","GameContentLinks","FishingSpot","fishingSpotData","NavBar","App","getData","Promise","resolve","setTimeout","headers","results","Results","gatheringItemResults","craftingItemResults","fishingItemResults","lastIndex","lookupRecipe","searchTerm","replace","Pagination","PageTotal","paginatedURL","process","items","itemId","GatheringItem","selectedObjResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f951d16c.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass SearchResult extends Component {\n    constructor(){\n        super();\n        this.state = {\n            result: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            result: this.props.result\n        });\n    }\n\n    handleClick = () => {\n        this.props.handleClick(this.state.result);\n    }\n\n    render() {\n        return (\n            <>\n                <tr className={this.props.selectedObj.ID === this.state.result.ID ? 'row selected' : 'row'}>\n                    <td \n                        \n                        onClick={this.handleClick}\n                    >\n                        {this.state.result['Name']}\n                    </td>\n                </tr>\n            </>\n        );\n    }\n}\n\nexport default SearchResult;","import React, {Component} from 'react';\nimport SearchResult from '../Components/SearchResult';\n\nclass HomePage extends Component {\n    handleSearch = (e) => {\n        e.preventDefault();\n        this.props.performSearch();\n    }\n\n    handleChange = (e) => {\n        this.props.updateSearchTerm(e.target.value);\n    }\n\n    handleClick = (e) => {\n        this.props.updateSelectedObj(e);\n    }\n\n    render() {\n        let listRecipes = this.props.searchResults.filter(x => x['UrlType'] === \"Recipe\");\n        let listItems = this.props.searchResults.filter(x => x['UrlType'] === \"Item\" && listRecipes.filter(y => y.Name === x.Name).length === 0);\n        \n        listRecipes = listRecipes.map((result, id) => \n            <React.Fragment key={id}>\n                <SearchResult \n                    result={result} \n                    filterBy={\"recipe\"}\n                    handleClick={this.handleClick}\n                    selectedObj={this.props.selectedObj}\n                />\n            </React.Fragment>\n        );\n\n        listItems = listItems.map((result, id) => \n            <React.Fragment key={id}>\n                <SearchResult \n                    result={result} \n                    filterBy={\"item\"}\n                    handleClick={this.handleClick}\n                    selectedObj={this.props.selectedObj}\n                />\n            </React.Fragment>\n        );\n\n        return (\n            <>\n            <form align='center' id='search-form' onSubmit={this.handleSearch}>\n                <h3 align='center'>Search for an item to get started:</h3>\n                <div>\n                    <input \n                        type=\"text\"\n                        placeholder=\"Type here to search...\"\n                        value={this.props.searchString}\n                        onChange={this.handleChange}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"\"\n                    >\n                        Search\n                    </button>\n                </div>                \n            </form>\n            <p className={listItems.length === 0 ? 'invisible' : ''}></p>\n            <table className={listItems.length === 0 ? 'invisible' : 'table'}>\n                <thead>\n                <tr className=\"row header\">\n                    <th>Items</th>\n                </tr>\n                </thead>\n                <tbody>{listItems}</tbody>\n            </table>\n            <p className={listRecipes.length === 0 ? 'invisible' : ''}></p>\n            <table className={listRecipes.length === 0 ? 'invisible' : 'table'}>\n                <thead>\n                <tr className=\"row header\">\n                    <th>Recipes</th>\n                </tr>\n                </thead>\n                <tbody>{listRecipes}</tbody>\n            </table>\n            </>\n        );\n    }\n}\n\nexport default HomePage;","import React, {Component} from 'react';\n\nclass Recipe extends Component {\n    constructor() {\n        super();\n        this.state = {\n            recipe: []\n        };\n        this.getRecipe = this.getRecipe.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRecipe(this.props.recipeID);\n    }\n\n    getRecipe(id) {\n        const url = `https://xivapi.com/recipe/${id}?columns=ID,Icon,RecipeLevelTable,AmountIngredient0,AmountIngredient1,AmountIngredient2,AmountIngredient3,AmountIngredient4,AmountIngredient5,AmountIngredient6,AmountIngredient7,AmountIngredient8,AmountIngredient9,AmountResult,ClassJob.Abbreviation,ClassJob.Icon,ItemIngredient0,ItemIngredient1,ItemIngredient2,ItemIngredient3,ItemIngredient4,ItemIngredient5,ItemIngredient6,ItemIngredient7,ItemIngredient8,ItemIngredient9,ItemIngredientRecipe0,ItemIngredientRecipe1,ItemIngredientRecipe2,ItemIngredientRecipe3,ItemIngredientRecipe4,ItemIngredientRecipe5,ItemIngredientRecipe6,ItemIngredientRecipe7,ItemIngredientRecipe8,ItemIngredientRecipe9,ItemResult`\n\n        fetch(url, {mode: 'cors'})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    recipe: result\n            });\n        });\n    }\n\n    handleClick(e) {\n        const target = e.target;\n        const objName = target.innerText;\n        const ingredients = [];\n\n        for(let i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n            ingredients.push(this.state.recipe[`ItemIngredient${i}`]);\n        }\n\n        ingredients.map(item => {\n            if(item !== null && item.hasOwnProperty('Name')) {\n                if(objName.includes(item.Name)) {\n                    this.props.lookupItem(item)\n                }\n            } \n            return item;\n        })\n    }\n\n    render() {\n        if(this.state.recipe.length === 0) {\n            return <div className= \"invisible\" />\n        }\n\n        const ingredientAmounts = [];\n        const ingredients = [];\n        const ingredientRecipes = [];\n\n        for(let i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n            ingredientAmounts.push(this.state.recipe[`AmountIngredient${i}`]);\n            ingredients.push(this.state.recipe[`ItemIngredient${i}`]);\n            ingredientRecipes.push(this.state.recipe[`ItemIngredientRecipe${i}`]);\n        }\n\n        return (\n            <>\n                <ul className=\"cool-list\">\n                    {ingredientAmounts.map((ingredient, index) => {\n                        if(ingredient > 0) {\n                            if(ingredientRecipes[index]) {\n                                return (\n                                    <React.Fragment key={index}>\n                                        <li id=\"parent-material\">{ingredients[index].Name} (x{ingredient})</li>\n                                        <Recipe \n                                            recipeID={ingredientRecipes[index][0].ID}\n                                            lookupItem={this.props.lookupItem}\n                                        />\n                                    </React.Fragment>\n                                )\n                            } else {\n                                return (\n                                    <li \n                                        id=\"base-material\" \n                                        key={index}\n                                        onClick={this.handleClick}\n                                    >\n                                        {ingredients[index].Name} (x{ingredient})\n                                    </li>\n                                )\n                            }\n                        } else {\n                            return <div key={index} className=\"invisible\" />\n                        }\n                    })}\n                </ul>\n            </>\n        )\n    }\n}\n\nexport default Recipe;","import React, {Component} from 'react';\nimport Recipe from '../Components/Recipe';\n\nclass CraftingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            itemToBeCrafted: [],\n            ingredientAmounts: [],\n            ingredients: []\n        };\n    }\n\n    render() {\n        if(this.props.obj.hasOwnProperty('AmountIngredient0')) {\n            return (\n                <>\n                    <div>\n                        <img align=\"right\" src={`https://xivapi.com${this.props.obj.ItemResult.Icon}`} alt=\"Recipe item\"/>\n                        <h2>{this.props.obj.ItemResult.Name}</h2>\n                    </div>\n                    <Recipe \n                        recipeID={this.props.obj.ID}\n                        lookupItem={this.props.lookupItem}\n                    />\n                </>\n            )\n        } else {\n            return <div className=\"invisible\" />\n        }\n    }\n}\n\nexport default CraftingPage;","import React, {Component} from 'react';\n\nclass GatheringMap extends Component {\n    render() {\n        const multiplier = window.innerWidth > 420 ? 1 : 0.75;\n\n        return (\n            <div\n                className={this.props.selectedRegion.includes(this.props.nodes[0].TerritoryType.Map.PlaceName.Name) ? '' : 'invisible'} \n                id=\"map-container\">\n                <img\n                    id=\"map\"\n                    src={this.props.url}\n                    alt=\"Map\"\n                />\n                {this.props.nodes.map((node, key) => {\n                    if(this.props.mapData.filter(x => x.ID === node.ID).length > 0) {\n                        return (\n                            <img\n                                src={`https://xivapi.com${node.GatheringPointBase.GatheringType.IconMain}`}\n                                alt=\"i\"\n                                style= {{\n                                    position: 'absolute',\n                                    width: 32 * multiplier,\n                                    height: 32 * multiplier,\n                                    top: (this.props.mapData.filter(x => x.ID === node.ID)[0].PixelY / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier),\n                                    left: (this.props.mapData.filter(x => x.ID === node.ID)[0].PixelX / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier)\n                                }}\n                                key={key}\n                            />\n                        );\n                    } else {\n                        return <div className=\"invisible\" />\n                    }\n                })}\n            </div>\n        )\n    }\n}\n\nexport default GatheringMap;","import React, {Component} from 'react';\nimport {FaAngleRight, FaAngleDown} from 'react-icons/fa';\nimport GatheringMap from '../Components/GatheringMap';\n\nclass GatheringPoints extends Component {\n    render() {\n        const gatheringPointData = this.props.gatheringPointData.filter(x => x.PlaceName.Name !== null);\n        const returnItems = [];\n        const territories = [];\n        const regions = [];\n\n        for(let i = 0; i < gatheringPointData.length; i++){\n            for(let j in [1, 2, 3, 4, 5, 6, 7]) {\n                if(gatheringPointData[i].GatheringPointBase[`Item${j}`]){\n                    if(gatheringPointData[i].GatheringPointBase[`Item${j}`].Item.ID === this.props.gatheringItemID) {\n                        returnItems.push(gatheringPointData[i]);\n                    }\n                }                \n            }\n        }\n\n        for(let i = 0; i < returnItems.length; i++){\n            if(!territories.includes(returnItems[i].TerritoryType.Map.PlaceNameRegion.Name)) {                \n                territories.push(returnItems[i].TerritoryType.Map.PlaceNameRegion.Name);\n            }\n        }\n        \n        for(let i = 0; i < returnItems.length; i++){\n            if(!regions.includes(returnItems[i].TerritoryType.Map.PlaceName.Name)) {\n                regions.push(returnItems[i].TerritoryType.Map.PlaceName.Name);\n            }\n        }\n\n        return (\n            <>\n            {territories.map((territory, key) => {\n                if(territory !== null) {\n                    return (\n                        <React.Fragment key={key}>\n                            <h2 onClick={this.props.toggleTerritories}>{this.props.selectedTerritory.includes(territory) ? <FaAngleDown /> : <FaAngleRight />} {territory} ({returnItems.filter(x => x.TerritoryType.Map.PlaceNameRegion.Name === territory).length} nodes)</h2>\n                            {regions.map((region, key) => {\n                                if(returnItems.filter(x => x.TerritoryType.Map.PlaceNameRegion.Name === territory && x.TerritoryType.Map.PlaceName.Name === region).length > 0) {\n                                    return (\n                                        <div key={key} className={this.props.selectedTerritory.includes(territory) ? '' : 'invisible'}>\n                                        <h3 onClick={this.props.toggleRegions}>{this.props.selectedRegion.includes(region) ? <FaAngleDown /> : <FaAngleRight />} {region}</h3>\n                                            <GatheringMap\n                                                url={`https://xivapi.com${returnItems.filter(x => x.TerritoryType.Map.PlaceName.Name === region)[0].TerritoryType.Map.MapFilename}`}\n                                                nodes={returnItems.filter(x => x.TerritoryType.Map.PlaceName.Name === region)}\n                                                mapData={this.props.mapData}\n                                                selectedRegion={this.props.selectedRegion}\n                                            />\n                                        </div>\n                                    )\n                                } else {\n                                    return <div key={key} className=\"invisible\"/>\n                                }\n                            })}                                                \n                        </React.Fragment>\n                    );\n                } else {\n                    return <div key={key} className=\"invisible\"/>\n                }\n            })}\n            </>\n        );\n    }\n}\n\nexport default GatheringPoints;","import React, {Component} from 'react';\nimport GatheringPoints from '../Components/GatheringPoints';\n\nclass GatheringPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedTerritory: '',\n            selectedRegion: ''\n        };\n        this.toggleTerritories = this.toggleTerritories.bind(this);\n        this.toggleRegions = this.toggleRegions.bind(this);\n    }\n\n    toggleTerritories(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            this.setState({\n                selectedRegion: ''\n            });\n    \n            if(this.state.selectedTerritory === text) {\n                this.setState({\n                    selectedTerritory: ''\n                });\n            } else {\n                this.setState({\n                    selectedTerritory: text\n                });\n            }\n        }        \n    }\n\n    toggleRegions(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            if(this.state.selectedRegion === text) {\n                this.setState({\n                    selectedRegion: ''\n                });\n            } else {\n                this.setState({\n                    selectedRegion: text\n                });\n            }\n        }\n    }\n\n    render () {\n        if(this.props.obj) {\n            try {\n                if (this.props.obj && this.props.obj[0].includes(\"cannot be gathered\")) {\n                    return (\n                        <h3>{this.props.obj}!</h3>\n                    )\n                }\n            } catch (error) {\n                \n            }\n\n            const url = 'https://xivapi.com' + this.props.obj[3];\n\n            return (\n                <>\n                    <div>\n                        <img align=\"right\" src={url} alt=\"Gathering item\"/>\n                        <h2>{this.props.obj[0]}</h2>\n                    </div>\n                    <GatheringPoints \n                        gatheringItemID={this.props.obj[1]}\n                        toggleTerritories={this.toggleTerritories}\n                        toggleRegions={this.toggleRegions}\n                        selectedTerritory={this.state.selectedTerritory}\n                        selectedRegion={this.state.selectedRegion}\n                        mapData={this.props.mapData}\n                        gatheringPointData={this.props.gatheringPointData}\n                    />\n                </>\n            );\n        } else if (this.props.obj && this.props.obj[0].includes(\"cannot be gathered\")) {\n            return (\n                <h3>{this.props.obj}!</h3>\n            );\n        } else {\n            return (\n                <div />\n            );\n        }        \n    }\n}\n\nexport default GatheringPage;","import React, {Component} from 'react';\n\nclass FishingMap extends Component {\n    render() {\n        const multiplier = window.innerWidth > 420 ? 1 : 0.75;\n\n        return (\n            <div\n                className={this.props.selectedRegion.includes(this.props.fishingSpots[0].TerritoryType.PlaceName.Name) ? '' : 'invisible'} \n                id=\"map-container\">\n                <img\n                    id=\"map\"\n                    src={this.props.url}\n                    alt=\"Map\"\n                />\n                {this.props.fishingSpots.map((spot, key) => {\n                    return (\n                        <img\n                            src='https://xivapi.com//cj/1/fisher.png'\n                            alt=\"i\"\n                            style= {{\n                                position: 'absolute',\n                                width: 32 * multiplier,\n                                height: 32 * multiplier,\n                                top: (spot.Z / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier),\n                                left: (spot.X / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier)\n                            }}\n                            key={key}\n                        />\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default FishingMap;","import React, {Component} from 'react';\nimport {FaAngleRight, FaAngleDown} from 'react-icons/fa';\nimport FishingMap from './FishingMap';\n\nclass FishingSpots extends Component {\n    constructor() {\n        super();\n        this.state ={\n\n        };\n    }\n\n    render() {\n        const territories = [];\n        const regions = [];\n\n        for(let i = 0; i < this.props.fishingSpots.length; i++) {\n            if(!territories.includes(this.props.fishingSpots[i].TerritoryType.PlaceNameRegion.Name)) {                \n                territories.push(this.props.fishingSpots[i].TerritoryType.PlaceNameRegion.Name);\n            }\n\n            if(!regions.includes(this.props.fishingSpots[i].TerritoryType.PlaceName.Name)) {\n                regions.push(this.props.fishingSpots[i].TerritoryType.PlaceName.Name);\n            }\n        }\n\n        return(\n            <>\n                {territories.map((territory, key) => {\n                if(territory !== null) {\n                    return (\n                        <React.Fragment key={key}>\n                            <h2 onClick={this.props.toggleTerritories}>{this.props.selectedTerritory.includes(territory) ? <FaAngleDown /> : <FaAngleRight />} {territory} ({this.props.fishingSpots.filter(x => x.TerritoryType.PlaceNameRegion.Name === territory).length} nodes)</h2>\n                            {regions.map((region, key) => {\n                                if(this.props.fishingSpots.filter(x => x.TerritoryType.PlaceNameRegion.Name === territory && x.TerritoryType.PlaceName.Name === region).length > 0) {\n                                    return (\n                                        <div key={key} className={this.props.selectedTerritory.includes(territory) ? '' : 'invisible'}>\n                                        <h3 onClick={this.props.toggleRegions}>{this.props.selectedRegion.includes(region) ? <FaAngleDown /> : <FaAngleRight />} {region}</h3>\n                                            <FishingMap\n                                                url={`https://xivapi.com${this.props.fishingSpots.filter(x => x.TerritoryType.PlaceName.Name === region)[0].TerritoryType.Map.MapFilename}`}\n                                                fishingSpots={this.props.fishingSpots.filter(x => x.TerritoryType.PlaceName.Name === region)}\n                                                selectedRegion={this.props.selectedRegion}\n                                            />\n                                        </div>\n                                    )\n                                } else {\n                                    return <div className='invisible' key={key}/>\n                                }\n                            })}                                                \n                        </React.Fragment>\n                    );\n                } else {\n                    return (\n                        <div key={key}/>\n                    );\n                }\n            })}\n            </>\n        )\n    }\n}\n\nexport default FishingSpots;","import React, {Component} from 'react';\nimport FishingSpots from '../Components/FishingSpots';\n\nclass FishingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedTerritory: '',\n            selectedRegion: ''\n        };\n        this.toggleTerritories = this.toggleTerritories.bind(this);\n        this.toggleRegions = this.toggleRegions.bind(this);\n    }\n\n    toggleTerritories(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            this.setState({\n                selectedRegion: ''\n            });\n    \n            if(this.state.selectedTerritory === text) {\n                this.setState({\n                    selectedTerritory: ''\n                });\n            } else {\n                this.setState({\n                    selectedTerritory: text\n                });\n            }\n        }        \n    }\n\n    toggleRegions(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            if(this.state.selectedRegion === text) {\n                this.setState({\n                    selectedRegion: ''\n                });\n            } else {\n                this.setState({\n                    selectedRegion: text\n                });\n            }\n        }\n    }\n\n    render() {\n        if(this.props.obj) {\n            try {\n                if (this.props.obj && this.props.obj[0].includes(\"cannot be fished\")) {\n                    return (\n                        <h3>{this.props.obj}!</h3>\n                    )\n                }\n            } catch (error) {\n                \n            }\n\n            const fishingSpotIDs = [];\n            const fishingSpots = [];\n\n            for(var i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n                if(this.props.obj.hasOwnProperty('GameContentLinks')) {\n                    if(this.props.obj.GameContentLinks.hasOwnProperty('FishingSpot')) {\n                        if(this.props.obj.GameContentLinks.FishingSpot.hasOwnProperty(`Item${i}`)) {\n                            for(var j = 0; j < this.props.obj.GameContentLinks.FishingSpot[`Item${i}`].length; j++) {\n                                if(!fishingSpotIDs.includes(this.props.obj.GameContentLinks.FishingSpot[`Item${i}`][j])) {\n                                    fishingSpotIDs.push(this.props.obj.GameContentLinks.FishingSpot[`Item${i}`][j]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            fishingSpotIDs.map(id => {\n                fishingSpots.push(this.props.fishingSpotData.filter(x => x.ID === id)[0]);\n                return id;\n            });\n\n            return (\n                <>\n                <div>\n                    <img align=\"right\" src={`https://xivapi.com${this.props.obj.Icon}`} alt=\"Fish\"/>\n                    <h2>{this.props.obj.Name}</h2>\n                    <FishingSpots \n                        fishingSpots={fishingSpots}\n                        toggleTerritories={this.toggleTerritories}\n                        toggleRegions={this.toggleRegions}\n                        selectedTerritory={this.state.selectedTerritory}\n                        selectedRegion={this.state.selectedRegion}\n                    />\n                </div>                \n                </>\n            )\n        } else if (this.props.obj && this.props.obj[0].includes(\"cannot be fished\")) {\n            return (\n                <h3>{this.props.obj}!</h3>\n            );\n        } else {\n            return (\n                <div />\n            );\n        }   \n    }\n}\n\nexport default FishingPage;","import React from 'react';\n\nconst NavBar = () => (\n    <nav>\n        <h1>CraFFtr</h1>\n    </nav>\n);\n\nexport default NavBar;","import React, {Component} from 'react';\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport CraftingPage from './pages/CraftingPage';\nimport GatheringPage from './pages/GatheringPage';\nimport FishingPage from './pages/FishingPage';\nimport NavBar from './NavBar';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchString: '',\n      searchResults: [],\n      selectedObj: [],\n      gatheringItemResults: null,\n      craftingItemResults: [],\n      fishingItemResults: null,\n      lastIndex: 0,\n      mapData: [],\n      fishingSpotData: [],\n      gatheringPointData: null,\n      territories: [],\n      regions: []\n    };\n    this.updateSearchTerm = this.updateSearchTerm.bind(this);\n    this.performSearch = this.performSearch.bind(this);\n    this.updateSelectedObj = this.updateSelectedObj.bind(this);\n    this.lookupItem = this.lookupItem.bind(this);\n    this.lookupRecipe = this.lookupRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    return new Promise(resolve => setTimeout(() => {\n      const mapData = [];\n\n      fetch('./MappyData.json', \n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(response => response.json())\n        .then(results => results.map(item => {\n          mapData.push(item);\n          return item;\n        }))\n\n      const fishingSpotData = [];\n      const urlFishing = 'https://xivapi.com/fishingspot?limit=1000&columns=ID,Item0TargetID,Item1TargetID,Item2TargetID,Item3TargetID,Item4TargetID,Item5TargetID,Item6TargetID,Item7TargetID,Item8TargetID,Item9TargetID,PlaceName.Name,TerritoryType.PlaceName.Name,TerritoryType.PlaceNameRegion.Name,TerritoryType.Map.MapFilename,X,Z';\n\n      fetch(urlFishing, {mode: 'cors'})\n        .then(response => response.json())\n        .then(results => results.Results.map(item => {\n          fishingSpotData.push(item);\n          return item;\n        }))\n\n      const gatheringPointData = [];\n\n      fetch('./GatheringPointData.json', \n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        })\n        .then(response => response.json())\n        .then(results => results.Results.map(item => {\n          gatheringPointData.push(item);\n          return item;\n        }))\n\n        this.setState({\n          mapData: mapData,\n          fishingSpotData: fishingSpotData,\n          gatheringPointData: gatheringPointData\n        });\n    \n      resolve()\n    }\n    , 0));\n  }\n\n  updateSearchTerm(searchTerm) {\n    this.setState({searchString: searchTerm});\n  }\n\n  performSearch() {\n    const url = `https://xivapi.com/search?string=${this.state.searchString.replace(' ', '%20')}`\n\n    this.setState({\n      gatheringItemResults: null,\n      craftingItemResults: [],\n      fishingItemResults: null,\n      searchResults: [],\n      // gatheringPointData: null,\n      territories: [],\n      regions: []\n    });\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        for(var i = 1; i <= result.Pagination.PageTotal; i++) {\n          const paginatedURL = `https://xivapi.com/search?string=${this.state.searchString.replace(' ', '%20')}&page=${i}&private_key=${process.env.REACT_APP_XIV_API_KEY}`\n    \n          fetch(paginatedURL, {mode: 'cors'})\n            .then(response => response.json())\n            .then(result => {\n              let items = result['Results'].map(item => {\n                item.itemId = this.state.lastIndex;\n                this.setState({lastIndex: this.state.lastIndex + 1});\n                return item;\n              });\n    \n              this.setState({\n                searchResults: items\n              });\n            });\n        }\n      });\n  }\n\n  lookupItem(obj) {\n    const url = `https://xivapi.com/item/${obj.ID}`\n    const gatheringPoints = [];\n    const territories = [];\n    const regions = [];\n    const gatheringPointBaseIDs = [];\n    const gatheringPointIDs = [];\n\n    this.setState({\n      gatheringItemResults: null,\n      fishingItemResults: null\n    })\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        if(result.GameContentLinks.hasOwnProperty('GatheringItem')){\n          // const urlGatheringItemID = `https://xivapi.com/item/${result.ID}?columns=GameContentLinks.GatheringItem.Item`\n\n          // fetch(urlGatheringItemID, {mode: 'cors'})\n          //   .then(response => response.json())\n          //   .then(result2 => { \n          //     const urlGatheringPointBaseIDs = `https://xivapi.com/gatheringitem/${result2.GameContentLinks.GatheringItem.Item}?columns=GameContentLinks.GatheringPointBase`\n              \n          //     fetch(urlGatheringPointBaseIDs, {mode: 'cors'})\n          //       .then(response => response.json())\n          //       .then(result3 => {\n          //         for(let item in [1, 2, 3, 4, 5, 6, 7]) {\n          //           if(result3.GameContentLinks.GatheringPointBase.hasOwnProperty(`Item${item}`)){\n          //             for(var i = 0; i < result3.GameContentLinks.GatheringPointBase[`Item${item}`].length; i++){\n          //               gatheringPointBaseIDs.push(result3.GameContentLinks.GatheringPointBase[`Item${item}`][i])\n          //             }\n          //           }\n          //         }\n          //       })\n          //       .then(() => {\n          //         const urlGatheringPointIDs = `https://xivapi.com/gatheringpointbase?ids=${gatheringPointBaseIDs.join()}&columns=GameContentLinks.GatheringPoint.GatheringPointBase`\n\n          //         fetch(urlGatheringPointIDs, {mode: 'cors'})\n          //             .then(response => response.json())\n          //             .then(result4 => result4.Results.map(item => {\n          //                 for(var i = 0; i < item.GameContentLinks.GatheringPoint.GatheringPointBase.length; i++){\n          //                     if(!gatheringPointIDs.includes(item.GameContentLinks.GatheringPoint.GatheringPointBase[i])){\n          //                       gatheringPointIDs.push(item.GameContentLinks.GatheringPoint.GatheringPointBase[i])\n          //                     }\n          //                 }\n          //                 return item;\n          //             }))\n          //         .then(() => {\n          //           const url = `https://xivapi.com/GatheringPoint?ids=${gatheringPointIDs.join()}limit=-1&columns=ID,GatheringPointBase.ID,GatheringPointBase.GatheringLevel,GatheringPointBase.GatheringType.ID,GatheringPointBase.GatheringType.Name,GatheringPointBase.GatheringType.IconMain,TerritoryType.Map.ID,TerritoryType.Map.PlaceNameRegion.Name,TerritoryType.Map.PlaceName.Name,GatheringPointBase.Item0.Item.ID,GatheringPointBase.Item1.Item.ID,GatheringPointBase.Item2.Item.ID,GatheringPointBase.Item3.Item.ID,GatheringPointBase.Item4.Item.ID,GatheringPointBase.Item5.Item.ID,GatheringPointBase.Item6.Item.ID,GatheringPointBase.Item7.Item.ID,PlaceName.Name,TerritoryType.Map.MapFilename`;\n\n          //           fetch(url, {mode: 'cors'})\n          //             .then(response => response.json())\n          //             .then(results => results.Results.map(item => {\n          //               if(item) {\n          //                 gatheringPoints.push(item)\n                      \n          //                 if(!territories.includes(item.TerritoryType.Map.PlaceNameRegion.Name)) {                \n          //                   territories.push(item.TerritoryType.Map.PlaceNameRegion.Name);\n          //                 }\n          //                 if(!regions.includes(item.TerritoryType.Map.PlaceName.Name)) {\n          //                   regions.push(item.TerritoryType.Map.PlaceName.Name);\n          //                 }\n          //               }\n          //               return item;\n          //             }));\n          //         });\n          //     });\n          // });\n\n          this.setState({\n            gatheringItemResults: [\n              result.Name,\n              result.ID,\n              result.GameContentLinks.GatheringItem.Item[0],\n              result.Icon\n            ],\n            //gatheringPointData: gatheringPoints,\n            // territories: territories,\n            // regions: regions\n          });\n        } else if(result.GameContentLinks.hasOwnProperty('FishingSpot')){\n          this.setState({\n            fishingItemResults: result\n          });\n        } else {\n          this.setState({\n            gatheringItemResults: [`${result.Name} cannot be gathered`],\n            fishingItemResults: [`${result.Name} cannot be fished`]\n          });\n        }\n      });\n  }\n\n  lookupRecipe(obj) {\n    const url = `https://xivapi.com/recipe/${obj.ID}?columns=ID,Icon,RecipeLevelTable,AmountIngredient0,AmountIngredient1,AmountIngredient2,AmountIngredient3,AmountIngredient4,AmountIngredient5,AmountIngredient6,AmountIngredient7,AmountIngredient8,AmountIngredient9,AmountResult,ClassJob.Abbreviation,ClassJob.Icon,ItemIngredient0,ItemIngredient1,ItemIngredient2,ItemIngredient3,ItemIngredient4,ItemIngredient5,ItemIngredient6,ItemIngredient7,ItemIngredient8,ItemIngredient9,ItemIngredientRecipe0,ItemIngredientRecipe1,ItemIngredientRecipe2,ItemIngredientRecipe3,ItemIngredientRecipe4,ItemIngredientRecipe5,ItemIngredientRecipe6,ItemIngredientRecipe7,ItemIngredientRecipe8,ItemIngredientRecipe9,ItemResult`\n\n    this.setState({\n      selectedObjResults: [],\n      craftingItemResults: [],\n      fishingItemResults: null\n    });\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          craftingItemResults: result\n        });\n      });\n  }\n\n  updateSelectedObj(obj) {\n    this.setState({\n      selectedObj: obj,\n      gatheringItemResults: null,\n      craftingItemResults: [],\n      fishingItemResults: null,\n      // gatheringPointData: null,\n      territories: [],\n      regions: []\n    })\n\n    if(obj['UrlType'] === 'Recipe') {\n      this.lookupRecipe(obj);\n    } else {\n      this.lookupItem(obj);\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <div className=\"app\">\n          <NavBar />\n          <div id=\"page-body\">\n            <HomePage \n              updateSearchTerm={this.updateSearchTerm}\n              updateSelectedObj={this.updateSelectedObj} \n              performSearch={this.performSearch} \n              searchString={this.state.searchString}\n              searchResults={this.state.searchResults}\n              selectedObj={this.state.selectedObj}\n            />\n            <CraftingPage\n              obj={this.state.craftingItemResults}\n              lookupItem={this.lookupItem}\n            />\n            <GatheringPage\n              obj={this.state.gatheringItemResults}\n              mapData={this.state.mapData}\n              gatheringPointData={this.state.gatheringPointData}\n              territories={this.state.territories}\n              regions={this.state.regions}\n            />\n            <FishingPage \n              obj={this.state.fishingItemResults}\n              fishingSpotData={this.state.fishingSpotData}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}