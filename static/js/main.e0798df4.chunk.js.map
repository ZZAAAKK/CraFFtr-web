{"version":3,"sources":["Components/SearchResult.js","pages/HomePage.js","Components/Recipe.js","pages/CraftingPage.js","Components/GatheringMap.js","Components/GatheringPoints.js","pages/GatheringPage.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["SearchResult","handleClick","props","state","result","this","setState","className","selectedObj","ID","onClick","Component","HomePage","handleSearch","e","preventDefault","performSearch","handleChange","updateSearchTerm","target","value","updateSelectedObj","listItems","searchResults","filter","x","map","id","Fragment","filterBy","listRecipes","onSubmit","type","placeholder","searchString","onChange","length","Recipe","recipe","getRecipe","bind","recipeID","url","fetch","mode","then","response","json","ingredientAmounts","ingredients","ingredientRecipes","i","push","ingredient","index","Name","CraftingPage","itemToBeCrafted","obj","hasOwnProperty","align","src","ItemResult","Icon","alt","GatheringMap","multiplier","window","innerWidth","selectedRegion","includes","nodes","TerritoryType","Map","PlaceName","node","key","GatheringPointBase","GatheringType","IconMain","style","position","width","height","top","mapData","PixelY","left","PixelX","GatheringPoints","gatheringPoints","gatheringPointData","getData","results","items","Results","item","returnItems","j","Item","gatheringItemID","territories","PlaceNameRegion","regions","places","territory","toggleTerritories","selectedTerritory","region","toggleRegions","MapFilename","GatheringPage","text","innerText","NavBar","App","selectedObjResults","lastIndex","lookupItem","lookupRecipe","headers","searchTerm","replace","itemId","Url","GameContentLinks","GatheringItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0798df4.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass SearchResult extends Component {\n    constructor(){\n        super();\n        this.state = {\n            result: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            result: this.props.result\n        });\n    }\n\n    handleClick = () => {\n        this.props.handleClick(this.state.result);\n    }\n\n    render() {\n        return (\n            <>\n                <tr className={this.props.selectedObj.ID === this.state.result.ID ? 'row selected' : 'row'}>\n                    <td \n                        \n                        onClick={this.handleClick}\n                    >\n                        {this.state.result['Name']}\n                    </td>\n                </tr>\n            </>\n        );\n    }\n}\n\n// const SearchResult = ({res, filterBy, handleClick}) => {\n//     const result = res;\n\n//     return (\n//         <>\n//             <tr>\n//                 <td>\n//                     {result['Name']}\n//                 </td>\n//                 <td>\n//                     <button \n//                         onClick={() => handleClick(result)}\n//                     >\n//                         Select this {filterBy}\n//                     </button>\n//                 </td>\n//             </tr>\n//         </>\n//     );\n// }\n\nexport default SearchResult;","import React, {Component} from 'react';\nimport SearchResult from '../Components/SearchResult';\n\nclass HomePage extends Component {\n    handleSearch = (e) => {\n        e.preventDefault();\n        this.props.performSearch();\n    }\n\n    handleChange = (e) => {\n        this.props.updateSearchTerm(e.target.value);\n    }\n\n    handleClick = (e) => {\n        this.props.updateSelectedObj(e);\n    }\n\n    render() {\n        let listItems = this.props.searchResults.filter(x => x['UrlType'] === \"Item\");\n        listItems = listItems.map((result, id) => \n            <React.Fragment key={id}>\n                <SearchResult \n                    result={result} \n                    filterBy={\"item\"}\n                    handleClick={this.handleClick}\n                    selectedObj={this.props.selectedObj}\n                />\n            </React.Fragment>\n        );\n\n        let listRecipes = this.props.searchResults.filter(x => x['UrlType'] === \"Recipe\");\n        listRecipes = listRecipes.map((result, id) => \n            <React.Fragment key={id}>\n                <SearchResult \n                    result={result} \n                    filterBy={\"recipe\"}\n                    handleClick={this.handleClick}\n                    selectedObj={this.props.selectedObj}\n                />\n            </React.Fragment>\n        );\n\n        return (\n            <>\n            <form id=\"searchForm\" onSubmit={this.handleSearch}>\n                <p>Search for an item to get started:</p>\n                <input \n                    type=\"text\"\n                    placeholder=\"Type here to search...\"\n                    value={this.props.searchString}\n                    onChange={this.handleChange}\n                />\n                <button\n                    type=\"submit\"\n                    className=\"\"\n                >\n                    Search\n                </button>\n            </form>\n            <p className={listItems.length === 0 ? 'invisible' : ''}></p>\n            <table className={listItems.length === 0 ? 'invisible' : 'table'}>\n                <thead>\n                <tr className=\"row header\">\n                    <th>Items</th>\n                </tr>\n                </thead>\n                <tbody>{listItems}</tbody>\n            </table>\n            <p className={listRecipes.length === 0 ? 'invisible' : ''}></p>\n            <table className={listRecipes.length === 0 ? 'invisible' : 'table'}>\n                <thead>\n                <tr className=\"row header\">\n                    <th>Recipes</th>\n                </tr>\n                </thead>\n                <tbody>{listRecipes}</tbody>\n            </table>\n            </>\n        );\n    }\n}\n\nexport default HomePage;","import React, {Component} from 'react';\n\nclass Recipe extends Component {\n    constructor() {\n        super();\n        this.state = {\n            recipe: []\n        };\n        this.getRecipe = this.getRecipe.bind(this);\n    }\n\n    componentDidMount() {\n        this.getRecipe(this.props.recipeID);\n    }\n\n    getRecipe(id) {\n        const url = `https://xivapi.com/recipe/${id}?columns=ID,Icon,RecipeLevelTable,AmountIngredient0,AmountIngredient1,AmountIngredient2,AmountIngredient3,AmountIngredient4,AmountIngredient5,AmountIngredient6,AmountIngredient7,AmountIngredient8,AmountIngredient9,AmountResult,ClassJob.Abbreviation,ClassJob.Icon,ItemIngredient0,ItemIngredient1,ItemIngredient2,ItemIngredient3,ItemIngredient4,ItemIngredient5,ItemIngredient6,ItemIngredient7,ItemIngredient8,ItemIngredient9,ItemIngredientRecipe0,ItemIngredientRecipe1,ItemIngredientRecipe2,ItemIngredientRecipe3,ItemIngredientRecipe4,ItemIngredientRecipe5,ItemIngredientRecipe6,ItemIngredientRecipe7,ItemIngredientRecipe8,ItemIngredientRecipe9,ItemResult`\n\n        fetch(url, {mode: 'cors'})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({\n                    recipe: result\n            });\n        });\n    }\n\n    render() {\n        if(this.state.recipe.length === 0) {\n            return <div className= \"invisible\" />\n        }\n\n        const ingredientAmounts = [];\n        const ingredients = [];\n        const ingredientRecipes = [];\n\n        for(let i in [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]) {\n            ingredientAmounts.push(this.state.recipe[`AmountIngredient${i}`]);\n            ingredients.push(this.state.recipe[`ItemIngredient${i}`]);\n            ingredientRecipes.push(this.state.recipe[`ItemIngredientRecipe${i}`]);\n        }\n\n        return (\n            <>\n                <ul className=\"cool-list\">\n                    {ingredientAmounts.map((ingredient, index) => {\n                        if(ingredient > 0) {\n                            if(ingredientRecipes[index]) {\n                                return (\n                                    <React.Fragment key={index}>\n                                        <li>{ingredients[index].Name} (x{ingredient})</li>\n                                        <Recipe recipeID={ingredientRecipes[index][0].ID} />\n                                    </React.Fragment>\n                                )\n                            } else {\n                                return (\n                                <li key={index}>{ingredients[index].Name} (x{ingredient})</li>\n                                )\n                            }\n                        }\n                    })}\n                </ul>\n            </>\n        )\n    }\n}\n\nexport default Recipe;","import React, {Component} from 'react';\nimport Recipe from '../Components/Recipe';\n\nclass CraftingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            itemToBeCrafted: [],\n            ingredientAmounts: [],\n            ingredients: []\n        };\n    }\n\n    render() {\n        if(this.props.obj.hasOwnProperty('AmountIngredient0')) {\n            return (\n                <>\n                    <div>\n                        <img align=\"right\" src={`https://xivapi.com${this.props.obj.ItemResult.Icon}`} alt=\"Recipe item\"/>\n                        <h2>{this.props.obj.ItemResult.Name}</h2>\n                    </div>\n                    <Recipe recipeID={this.props.obj.ID} />\n                </>\n            )\n        } else {\n            return <div className=\"invisible\" />\n        }\n    }\n}\n\nexport default CraftingPage;","import React, {Component} from 'react';\n\nclass GatheringMap extends Component {\n    render() {\n        const multiplier = window.innerWidth > 420 ? 1 : 0.75;\n\n        return (\n            <div\n                className={this.props.selectedRegion.includes(this.props.nodes[0].TerritoryType.Map.PlaceName.Name) ? '' : 'invisible'} \n                id=\"map-container\">\n                <img\n                    id=\"map\"\n                    src={this.props.url}\n                    alt=\"Map\"\n                />\n                {this.props.nodes.map((node, key) => {\n                    return (\n                        <img\n                            src={`https://xivapi.com${node.GatheringPointBase.GatheringType.IconMain}`}\n                            alt=\"i\"\n                            style= {{\n                                position: 'absolute',\n                                width: 32 * multiplier,\n                                height: 32 * multiplier,\n                                top: (this.props.mapData.filter(x => x.ID === node.ID)[0].PixelY / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier),\n                                left: (this.props.mapData.filter(x => x.ID === node.ID)[0].PixelX / (window.innerWidth > 420 ? 2 : 5.12)) - (16 * multiplier)\n                            }}\n                            key={key}\n                        />\n                    );\n                })}\n            </div>\n        )\n    }\n}\n\nexport default GatheringMap;","import React, {Component} from 'react';\nimport {FaAngleRight, FaAngleDown} from 'react-icons/fa';\nimport GatheringMap from '../Components/GatheringMap';\n\nclass GatheringPoints extends Component {\n    constructor() {\n        super();\n        this.state = {\n            gatheringPoints: [],\n            gatheringPointData: []\n        };\n    }\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    getData() {\n        const url = 'https://xivapi.com/GatheringPoint?limit=-1&columns=ID,GatheringPointBase.ID,GatheringPointBase.GatheringLevel,GatheringPointBase.GatheringType.ID,GatheringPointBase.GatheringType.Name,GatheringPointBase.GatheringType.IconMain,TerritoryType.Map.ID,TerritoryType.Map.PlaceNameRegion.Name,TerritoryType.Map.PlaceName.Name,GatheringPointBase.Item0.Item.ID,GatheringPointBase.Item1.Item.ID,GatheringPointBase.Item2.Item.ID,GatheringPointBase.Item3.Item.ID,GatheringPointBase.Item4.Item.ID,GatheringPointBase.Item5.Item.ID,GatheringPointBase.Item6.Item.ID,GatheringPointBase.Item7.Item.ID,PlaceName.Name,TerritoryType.Map.MapFilename';\n        \n        fetch(url, {mode: 'cors'})\n            .then(response => response.json())\n            .then(results => {\n                const items = results.Results.map(item => {\n                    return item;\n                });\n\n                this.setState({\n                    gatheringPoints: items\n                });\n            });\n    }\n\n    render() {\n        if(this.state.gatheringPoints.length === 0){\n            return <h3>Loading...</h3>\n        }\n        \n        const returnItems = [];\n        for (let i = 0; i < this.state.gatheringPoints.length; i++) {\n            for (let j in [0, 1, 2, 3, 4, 5, 6, 7]) {\n                if (this.state.gatheringPoints[i].GatheringPointBase[`Item${j}`].Item.ID === this.props.gatheringItemID) {\n                    returnItems.push(this.state.gatheringPoints[i]);\n                }\n            }\n        }\n\n        const territories = [];\n        for(let i = 0; i < returnItems.length; i++) {\n            if(!territories.includes(returnItems[i].TerritoryType.Map.PlaceNameRegion.Name)) {                \n                territories.push(returnItems[i].TerritoryType.Map.PlaceNameRegion.Name);\n            }\n        }\n\n        const regions = [];\n        for(let i = 0; i < returnItems.length; i++) {\n            if(!regions.includes(returnItems[i].TerritoryType.Map.PlaceName.Name)) {\n                regions.push(returnItems[i].TerritoryType.Map.PlaceName.Name);\n            }\n        }\n\n        const places = [];\n        for(let i = 0; i < returnItems.length; i++) {\n            if(!places.includes(returnItems[i].PlaceName.Name)) {\n                places.push(returnItems[i].PlaceName.Name);\n            }\n        }\n\n        const nodes = [];\n        const mapData = this.props.mapData;\n        for(let i = 0; i < mapData.length; i++) {\n            for(let j = 0; j < returnItems.length; j++) {\n                if(returnItems[j].ID === mapData[i].ID) {\n                    nodes.push(mapData[i]);\n                }\n            }\n        }\n        \n        return (\n            <>\n            {territories.map((territory, key) => {\n                if(territory !== null) {\n                    return (\n                        <React.Fragment key={key}>\n                            <h2 onClick={this.props.toggleTerritories}>{this.props.selectedTerritory.includes(territory) ? <FaAngleDown /> : <FaAngleRight />} {territory} ({returnItems.filter(x => x.TerritoryType.Map.PlaceNameRegion.Name === territory).length} nodes)</h2>\n                            {regions.map((region, key) => {\n                                if(returnItems.filter(x => x.TerritoryType.Map.PlaceNameRegion.Name === territory && x.TerritoryType.Map.PlaceName.Name === region).length > 0) {\n                                    return (\n                                        <div key={key} className={this.props.selectedTerritory.includes(territory) ? '' : 'invisible'}>\n                                        <h3 onClick={this.props.toggleRegions}>{this.props.selectedRegion.includes(region) ? <FaAngleDown /> : <FaAngleRight />} {region}</h3>\n                                        {/* <div className=\"limiter\">\n                                        <div className='wrap-table100'>\n                                            <table className={this.props.selectedRegion.includes(region) ? 'table' : 'collapsed'}>\n                                                <thead>\n                                                    <tr className=\"row header\">\n                                                        <th>Place Name</th>\n                                                        <th>X</th>\n                                                        <th>Y</th>\n                                                        <th>Z</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {returnItems.map((item, key) => {\n                                                        if(item.TerritoryType.Map.PlaceName.Name === region && item.TerritoryType.Map.PlaceNameRegion.Name === territory) {\n                                                            return <tr className=\"row\" key={key}>\n                                                                <td>{item.PlaceName.Name}</td>\n                                                                <td>{mapData.filter(x => x.ID === item.ID)[0].PosX.toFixed(1)}</td>\n                                                                <td>{mapData.filter(x => x.ID === item.ID)[0].PosY.toFixed(1)}</td>\n                                                                <td>{mapData.filter(x => x.ID === item.ID)[0].PosZ.toFixed(1)}</td>\n                                                            </tr>;\n                                                        } else {\n                                                            return <tr className='collapsed' key={key}/>\n                                                        }\n                                                    })}\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        </div>  */}\n                                            <GatheringMap\n                                                url={`https://xivapi.com${returnItems.filter(x => x.TerritoryType.Map.PlaceName.Name === region)[0].TerritoryType.Map.MapFilename}`}\n                                                nodes={returnItems.filter(x => x.TerritoryType.Map.PlaceName.Name === region)}\n                                                mapData={mapData}\n                                                selectedRegion={this.props.selectedRegion}\n                                            /> \n                                        </div>\n                                    )\n                                } else {\n                                    return <div className='invisible' key={key}/>\n                                }\n                            })}                                                \n                        </React.Fragment>\n                    );\n                } else {\n                    return (\n                        <div key={key}/>\n                    );\n                }\n            })}            \n            </>\n        );    \n    }\n}\n\nexport default GatheringPoints;","import React, {Component} from 'react';\nimport GatheringPoints from '../Components/GatheringPoints';\n\nclass GatheringPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedTerritory: '',\n            selectedRegion: ''\n        };\n        this.toggleTerritories = this.toggleTerritories.bind(this);\n        this.toggleRegions = this.toggleRegions.bind(this);\n    }\n\n    toggleTerritories(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            this.setState({\n                selectedRegion: ''\n            });\n    \n            if(this.state.selectedTerritory === text) {\n                this.setState({\n                    selectedTerritory: ''\n                });\n            } else {\n                this.setState({\n                    selectedTerritory: text\n                });\n            }\n        }        \n    }\n\n    toggleRegions(e) {\n        const target = e.target;\n        const text = target.innerText;\n\n        if(!e.target.innerText) {\n            return;\n        } else {\n            if(this.state.selectedRegion === text) {\n                this.setState({\n                    selectedRegion: ''\n                });\n            } else {\n                this.setState({\n                    selectedRegion: text\n                });\n            }\n        }\n    }\n\n    render () {\n        if(this.props.obj.length > 1) {\n            const url = 'https://xivapi.com' + this.props.obj[3];\n\n            return (\n                <>\n                    <div>\n                        <img align=\"right\" src={url} alt=\"Gathering item\"/>\n                        <h2>{this.props.obj[0]}</h2>\n                    </div>\n                    <GatheringPoints \n                        gatheringItemID={this.props.obj[1]} \n                        toggleTerritories={this.toggleTerritories}\n                        toggleRegions={this.toggleRegions}\n                        selectedTerritory={this.state.selectedTerritory}\n                        selectedRegion={this.state.selectedRegion}\n                        mapData={this.props.mapData}\n                    />\n                </>\n            );\n        } else if (this.props.obj.length === 1) {\n            return (\n                <h3>{this.props.obj[0]}!</h3>\n            );\n        } else {\n            return (\n                <div />\n            );\n        }        \n    }\n}\n\nexport default GatheringPage;","import React from 'react';\n\nconst NavBar = () => (\n    <nav>\n        <h1>CraFFtr</h1>\n    </nav>\n);\n\nexport default NavBar;","import React, {Component} from 'react';\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport CraftingPage from './pages/CraftingPage';\nimport GatheringPage from './pages/GatheringPage';\nimport NavBar from './NavBar';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchString: '',\n      searchResults: [],\n      selectedObj: [],\n      selectedObjResults: [],\n      lastIndex: 0,\n      mapData: []\n    };\n    this.updateSearchTerm = this.updateSearchTerm.bind(this);\n    this.performSearch = this.performSearch.bind(this);\n    this.updateSelectedObj = this.updateSelectedObj.bind(this);\n    this.lookupItem = this.lookupItem.bind(this);\n    this.lookupRecipe = this.lookupRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    const mapData = [];\n\n    fetch('./MappyData.json', \n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then(results => results.map(item => {\n        mapData.push(item);\n        return item;\n    }));\n\n    this.setState({\n      mapData: mapData\n    });\n  }\n\n  updateSearchTerm(searchTerm) {\n    this.setState({searchString: searchTerm});\n  }\n\n  performSearch() {\n    const url = 'https://xivapi.com/search?string=' + \n      this.state.searchString.replace(' ', '%20') + \n      '&private_key=' + process.env.REACT_APP_XIV_API_KEY;\n    \n    this.setState({\n      selectedObj: [],\n      selectedObjResults: [],\n      searchResults: []\n    });\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        let items = result['Results'].map(item => {\n          item.itemId = this.state.lastIndex;\n          this.setState({lastIndex: this.state.lastIndex + 1});\n          return item;\n        });\n\n        this.setState({\n          searchResults: items\n        });\n      });\n  }\n\n  lookupItem(obj) {\n    const url = 'https://xivapi.com' + obj.Url + '?private_key=' + process.env.REACT_APP_XIV_API_KEY;\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        if(result.GameContentLinks.hasOwnProperty('GatheringItem')){\n          this.setState({\n            selectedObjResults: [\n              result.Name,\n              result.ID,\n              result.GameContentLinks.GatheringItem.Item[0],\n              result.Icon\n            ]\n          });\n        } else {\n          this.setState({\n            selectedObjResults: [`${result.Name} is not a gathering item`]\n          });\n        }\n      });\n  }\n\n  lookupRecipe(obj) {\n    const url = `https://xivapi.com/recipe/${obj.ID}?columns=ID,Icon,RecipeLevelTable,AmountIngredient0,AmountIngredient1,AmountIngredient2,AmountIngredient3,AmountIngredient4,AmountIngredient5,AmountIngredient6,AmountIngredient7,AmountIngredient8,AmountIngredient9,AmountResult,ClassJob.Abbreviation,ClassJob.Icon,ItemIngredient0,ItemIngredient1,ItemIngredient2,ItemIngredient3,ItemIngredient4,ItemIngredient5,ItemIngredient6,ItemIngredient7,ItemIngredient8,ItemIngredient9,ItemIngredientRecipe0,ItemIngredientRecipe1,ItemIngredientRecipe2,ItemIngredientRecipe3,ItemIngredientRecipe4,ItemIngredientRecipe5,ItemIngredientRecipe6,ItemIngredientRecipe7,ItemIngredientRecipe8,ItemIngredientRecipe9,ItemResult`\n\n    this.setState({\n      selectedObjResults: []\n    });\n\n    fetch(url, {mode: 'cors'})\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          selectedObjResults: result\n        });\n      });\n  }\n\n  updateSelectedObj(obj) {\n    this.setState({\n      selectedObj: obj\n    });\n\n    if(obj['UrlType'] === 'Recipe') {\n      this.lookupRecipe(obj);\n    } else {\n      this.lookupItem(obj);\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <div className=\"app\">\n          <NavBar />\n          <div id=\"page-body\">\n            <HomePage \n              updateSearchTerm={this.updateSearchTerm}\n              updateSelectedObj={this.updateSelectedObj} \n              performSearch={this.performSearch} \n              searchString={this.state.searchString}\n              searchResults={this.state.searchResults}\n              selectedObj={this.state.selectedObj}\n            />\n            <GatheringPage\n              obj={this.state.selectedObjResults}\n              mapData={this.state.mapData}\n            />\n            <CraftingPage\n              obj={this.state.selectedObjResults}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}